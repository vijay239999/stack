import type { ConfigFile, ConfigJSONFile, Configs, Runtime, States, Timespan } from '../@types/poku.js';
export declare const states: States;
export declare const timespan: Timespan;
export declare const results: {
    passed: number;
    failed: number;
    skipped: number;
    todo: number;
};
export declare const VERSION = "";
export declare const deepOptions: string[];
export declare const GLOBAL: {
    cwd: string;
    configs: Configs;
    configFile: string | undefined;
    configsFromFile: ConfigFile | ConfigJSONFile;
    reporter: {
        onRunStart: () => void;
        onDescribeAsTitle: (title: string, options: import("../@types/describe.js").DescribeOptions) => void;
        onDescribeStart: (options: {
            title?: string;
        }) => void;
        onDescribeEnd: (options: {
            title?: string;
            duration: number;
        }) => void;
        onItStart: (options: {
            title?: string;
        }) => void;
        onItEnd: (options: {
            title?: string;
            duration: number;
        }) => void;
        onAssertionSuccess: (options: {
            message: string;
        }) => void;
        onAssertionFailure: (options: {
            assertOptions: import("../@types/assert.js").ProcessAssertionOptions;
            error: import("assert").AssertionError;
        }) => void;
        onSkipFile: (options: {
            message: string;
        }) => void;
        onSkipModifier: (options: {
            message: string;
        }) => void;
        onTodoModifier: (options: {
            message: string;
        }) => void;
        onFileStart: (options: {
            path: {
                absolute: string;
                relative: string;
            };
        }) => void;
        onFileResult: (options: {
            status: boolean;
            path: {
                absolute: string;
                relative: string;
            };
            duration: number;
            output?: string;
        }) => void;
        onRunResult: (options: {
            code: number;
            timespan: Timespan;
            results: typeof results;
        }) => void;
        onExit: (options: {
            code: number;
            timespan: Timespan;
            results: typeof results;
        }) => void;
    };
    isPoku: boolean;
    FILE: string | undefined;
    envFile: string | undefined;
    runtime: Runtime;
    runAsOnly: boolean;
};
